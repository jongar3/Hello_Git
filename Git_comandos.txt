        CONFIG  

git config --global user.name "nombre"
git config --global user.email "email"

        INICIAR
git init
git branch -m "main"      cambiar nombre rama

git status

git add nombre_archivo      sacar "foto"

git commit= git commit -m "Este es mi ..."

git log (--graph) (--all)    (ver los commits)

git reflog 

git reset archivo     quitar archivo de add

git reset --hard has   cambiar el head borrando las ramas superiores (se pueden recuperar con git reflog)

git restore --source="hash-commit" archivo
recuperar archivo de add o si no hay, del comment del head se puede sustituir por checkout, para traer archivos

git show <commit_hash>:<path/to/file>         como el de arriba, pero lo imprime en la terminal

git show <commit_hash>: Muestra los detalles del commit (log, diff)

git checkout "hash" movemos el "Head"

git diff (ver los cambios respecto al commit)

git revert ("cargarse commits")


NOTA, SI CAMBIO UN ARCHIVO DE MAIN, GIT SWITCH SIRVE PARA CAMBIAR EL HEAD POR LO QUE NO FUNCIONARI GIT SWITCH MAIN, GIT RESTORE . ME TRAERIA TODOS LOS ARCHVIOS DEL HEAD POR LO QUE HABRIA QUE USAR ESO.        


    ALIAS "CREAR TUS PROPIOS COMANDOS"  
ej: git config --global alias.tree "log --graph --pretty=oneline"

git tag "clase_1" los tag se pueden usar en lugar de los hashes.


git branch nueva_rama 
git switch nueva_rama 
(creamos y cambiamos a la nueva rama)

git merge login     traer los datos de la rama login al head.


git stash   (hace un commit de manera temporal sin afectar al arbol. pensado para moverte de rama sin perder lo de la rama anterior pero sin hacer un commit)
git stash list (ver los hash se los stash)

git stash pop (cargar el stash)

git branch -d nombre_rama (borrar rama)

-----------------------------------------
    GITHUB

git remote add origin git@github.com:jongar3/Directorio_de_git_hub.git      
Emparejar el directorio local con el de github

git remote remove orgin

git remote -v 



git push -u origin main // "primera vez, en cada rama-subrama"


Nota: origin puede ser otro nombre


git push        (subir a github)

git fetch (origin)  descargar novedades de GitHub (pero sin descargarse los cambios)

git pull (como merge pero remoto)

git clone (clona el github a local)




